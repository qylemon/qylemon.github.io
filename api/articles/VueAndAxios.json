{"title":"初探Vue+axios","slug":"VueAndAxios","date":"2019-03-22T13:10:59.714Z","updated":"2019-12-31T08:20:25.287Z","comments":true,"path":"api/articles/VueAndAxios.json","excerpt":" [Figure] ","covers":["https://picabstract-preview-ftn.weiyun.com/ftn_pic_abs_v3/c5a8a160ba6e87ffec41f92a3d633f88908a0c6aec93d792f93dfddfb867a6d923d76be353db1ebaefe783b1d0ea4530?pictype=scale&amp;from=30113&amp;version=3.3.3.3&amp;uin=1643994375&amp;fname=vue.jpg&amp;size=750"],"content":"<p><img src=\"https://picabstract-preview-ftn.weiyun.com/ftn_pic_abs_v3/c5a8a160ba6e87ffec41f92a3d633f88908a0c6aec93d792f93dfddfb867a6d923d76be353db1ebaefe783b1d0ea4530?pictype=scale&amp;from=30113&amp;version=3.3.3.3&amp;uin=1643994375&amp;fname=vue.jpg&amp;size=750\" alt><a id=\"more\"></a><br>因为不太懂前端所以一开始只了解div+css,后来慢慢听别人提起Vue、Angular、React,才开始了解前端框架，首次体验Vue发现相较于div+css有了明显的便利感操作十分简单,为Vue打call总结一下体验感(<em>^_^</em>)</p>\n<h2 id=\"Vue优点\"><a href=\"#Vue优点\" class=\"headerlink\" title=\"Vue优点\"></a>Vue优点</h2><ol>\n<li>将原来的直接操作dom的思想转变为操作数据,十分方便</li>\n<li>操作简单,通过组合、拼凑快速完成页面渲染</li>\n</ol>\n<h2 id=\"axios\"><a href=\"#axios\" class=\"headerlink\" title=\"axios\"></a>axios</h2><p>axios的好处就不列举了 太多了(๑•̀ㅂ•́)و✧ 相比ajax,axios则更适合前端mvvm思想,它还能自动转换json数据 这更加适应了前后端分离的开发方式</p>\n<h2 id=\"补充\"><a href=\"#补充\" class=\"headerlink\" title=\"补充\"></a>补充</h2><p>之前有写过一个没有登录态的前后端整合，后来很久没有写前端，最近整合了一个，填一下之前的坑。</p>\n<h2 id=\"关于登录态\"><a href=\"#关于登录态\" class=\"headerlink\" title=\"关于登录态\"></a>关于登录态</h2><p>前后端分离项目 后端在前端发来登录信息时，后端反馈前端一个token 然后前端存储，并在发送需要验证用户的请求时携带</p>\n<h2 id=\"如何存储\"><a href=\"#如何存储\" class=\"headerlink\" title=\"如何存储\"></a>如何存储</h2><p>使用sessionStorage或者localStorage存储，两者的同点时都使用浏览器存储信息，异点在于session显而易见属于会话存储，当会话结束时存储的内容就失效了 具体使用要看业务内容而定</p>\n<h2 id=\"关于局域网测试\"><a href=\"#关于局域网测试\" class=\"headerlink\" title=\"关于局域网测试\"></a>关于局域网测试</h2><blockquote>\n<p>修改package.json中script下dev的值，在后面加入–host 0.0.0.0</p>\n</blockquote>\n<p>记录一个失了智的遭遇，局域网内自己电脑能访问手机上发送不出去axios请求，因为设置如下（つ﹏⊂）</p>\n<blockquote>\n<p> axios.default.baseUrl =’<a href=\"http://localhost:8080&#39;\" target=\"_blank\" rel=\"noopener\">http://localhost:8080&#39;</a></p>\n</blockquote>\n<p>以上方式是错误的 要配置成局域网IP</p>\n<h2 id=\"end\"><a href=\"#end\" class=\"headerlink\" title=\"end\"></a>end</h2><p>新的坑 下次碰到再记录<br><br>附一个vscode生成Vue代码模板的快捷方式→<a href=\"https://www.jianshu.com/p/8610215a8a84\" target=\"_blank\" rel=\"noopener\">传送门</a></p>\n","more":"<br>因为不太懂前端所以一开始只了解div+css,后来慢慢听别人提起Vue、Angular、React,才开始了解前端框架，首次体验Vue发现相较于div+css有了明显的便利感操作十分简单,为Vue打call总结一下体验感(<em>^_^</em>)</p>\n<h2 id=\"Vue优点\"><a href=\"#Vue优点\" class=\"headerlink\" title=\"Vue优点\"></a>Vue优点</h2><ol>\n<li>将原来的直接操作dom的思想转变为操作数据,十分方便</li>\n<li>操作简单,通过组合、拼凑快速完成页面渲染</li>\n</ol>\n<h2 id=\"axios\"><a href=\"#axios\" class=\"headerlink\" title=\"axios\"></a>axios</h2><p>axios的好处就不列举了 太多了(๑•̀ㅂ•́)و✧ 相比ajax,axios则更适合前端mvvm思想,它还能自动转换json数据 这更加适应了前后端分离的开发方式</p>\n<h2 id=\"补充\"><a href=\"#补充\" class=\"headerlink\" title=\"补充\"></a>补充</h2><p>之前有写过一个没有登录态的前后端整合，后来很久没有写前端，最近整合了一个，填一下之前的坑。</p>\n<h2 id=\"关于登录态\"><a href=\"#关于登录态\" class=\"headerlink\" title=\"关于登录态\"></a>关于登录态</h2><p>前后端分离项目 后端在前端发来登录信息时，后端反馈前端一个token 然后前端存储，并在发送需要验证用户的请求时携带</p>\n<h2 id=\"如何存储\"><a href=\"#如何存储\" class=\"headerlink\" title=\"如何存储\"></a>如何存储</h2><p>使用sessionStorage或者localStorage存储，两者的同点时都使用浏览器存储信息，异点在于session显而易见属于会话存储，当会话结束时存储的内容就失效了 具体使用要看业务内容而定</p>\n<h2 id=\"关于局域网测试\"><a href=\"#关于局域网测试\" class=\"headerlink\" title=\"关于局域网测试\"></a>关于局域网测试</h2><blockquote>\n<p>修改package.json中script下dev的值，在后面加入–host 0.0.0.0</p>\n</blockquote>\n<p>记录一个失了智的遭遇，局域网内自己电脑能访问手机上发送不出去axios请求，因为设置如下（つ﹏⊂）</p>\n<blockquote>\n<p> axios.default.baseUrl =’<a href=\"http://localhost:8080&#39;\" target=\"_blank\" rel=\"noopener\">http://localhost:8080&#39;</a></p>\n</blockquote>\n<p>以上方式是错误的 要配置成局域网IP</p>\n<h2 id=\"end\"><a href=\"#end\" class=\"headerlink\" title=\"end\"></a>end</h2><p>新的坑 下次碰到再记录<br><br>附一个vscode生成Vue代码模板的快捷方式→<a href=\"https://www.jianshu.com/p/8610215a8a84\" target=\"_blank\" rel=\"noopener\">传送门</a></p>","categories":[{"name":"前端","path":"api/categories/前端.json"}],"tags":[{"name":"Vue","path":"api/tags/Vue.json"}]}