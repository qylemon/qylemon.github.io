{"title":"微信支付记录篇","slug":"微信支付","date":"2019-12-12T15:44:02.000Z","updated":"2020-06-01T07:18:28.693Z","comments":true,"path":"api/articles/微信支付.json","excerpt":" [Figure] ","covers":["https://ss1.bdstatic.com/70cFvXSh_Q1YnxGkpoWK1HF6hhy/it/u=3939231759,833545052&amp;fm=26&amp;gp=0.jpg"],"content":"<p><img src=\"https://ss1.bdstatic.com/70cFvXSh_Q1YnxGkpoWK1HF6hhy/it/u=3939231759,833545052&amp;fm=26&amp;gp=0.jpg\" alt><a id=\"more\"></a></p>\n<h1 id=\"微信支付\"><a href=\"#微信支付\" class=\"headerlink\" title=\"微信支付\"></a>微信支付</h1><h2 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h2><p>我们需要从小程序和商户平台获取如下参数 </p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">参数名称</th>\n<th style=\"text-align:center\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">appid</td>\n<td style=\"text-align:center\">小程序appid</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">mch_id</td>\n<td style=\"text-align:center\">商户id</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">key</td>\n<td style=\"text-align:center\">商户密钥</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">配置类 wechatConfig(来源woniu95)</span><br><span class=\"line\">public class WechatConfig &#123;</span><br><span class=\"line\">    //小程序appid</span><br><span class=\"line\">    public static final String appid = &quot;&quot;;</span><br><span class=\"line\">    //微信支付的商户id</span><br><span class=\"line\">    public static final String mch_id = &quot;&quot;;</span><br><span class=\"line\">    //微信支付的商户密钥</span><br><span class=\"line\">    public static final String key = &quot;&quot;;</span><br><span class=\"line\">    //支付成功后的服务器回调url，这里填PayController里的回调函数地址</span><br><span class=\"line\">    public static final String notify_url = &quot;&quot;;</span><br><span class=\"line\">    //签名方式，固定值</span><br><span class=\"line\">    public static final String SIGNTYPE = &quot;MD5&quot;;</span><br><span class=\"line\">    //交易类型，小程序支付的固定值为JSAPI</span><br><span class=\"line\">    public static final String TRADETYPE = &quot;JSAPI&quot;;</span><br><span class=\"line\">    //微信统一下单接口地址</span><br><span class=\"line\">    public static final String pay_url = &quot;https://api.mch.weixin.qq.com/pay/unifiedorder&quot;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">工具类 payutil</span><br><span class=\"line\">public class PayUtil &#123;</span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * 签名字符串</span><br><span class=\"line\">     *</span><br><span class=\"line\">     * @param text          需要签名的字符串</span><br><span class=\"line\">     * @param key           密钥</span><br><span class=\"line\">     * @param input_charset 编码格式</span><br><span class=\"line\">     * @return 签名结果</span><br><span class=\"line\">     */</span><br><span class=\"line\">    public static String sign(String text, String key, String input_charset) &#123;</span><br><span class=\"line\">        text = text + &quot;&amp;key=&quot; + key;</span><br><span class=\"line\">        return DigestUtils.md5Hex(getContentBytes(text, input_charset));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * 签名字符串</span><br><span class=\"line\">     *</span><br><span class=\"line\">     * @param text          需要签名的字符串</span><br><span class=\"line\">     * @param sign          签名结果</span><br><span class=\"line\">     * @param key           密钥</span><br><span class=\"line\">     * @param input_charset 编码格式</span><br><span class=\"line\">     * @return 签名结果</span><br><span class=\"line\">     */</span><br><span class=\"line\">    public static boolean verify(String text, String sign, String key, String input_charset) &#123;</span><br><span class=\"line\">        text = text + key;</span><br><span class=\"line\">        String mysign = DigestUtils.md5Hex(getContentBytes(text, input_charset));</span><br><span class=\"line\">        if (mysign.equals(sign)) &#123;</span><br><span class=\"line\">            return true;</span><br><span class=\"line\">        &#125; else &#123;</span><br><span class=\"line\">            return false;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * @param content</span><br><span class=\"line\">     * @param charset</span><br><span class=\"line\">     * @return</span><br><span class=\"line\">     * @throws java.security.SignatureException</span><br><span class=\"line\">     * @throws UnsupportedEncodingException</span><br><span class=\"line\">     */</span><br><span class=\"line\">    public static byte[] getContentBytes(String content, String charset) &#123;</span><br><span class=\"line\">        if (charset == null || &quot;&quot;.equals(charset)) &#123;</span><br><span class=\"line\">            return content.getBytes();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        try &#123;</span><br><span class=\"line\">            return content.getBytes(charset);</span><br><span class=\"line\">        &#125; catch (UnsupportedEncodingException e) &#123;</span><br><span class=\"line\">            throw new RuntimeException(&quot;MD5签名过程中出现错误,指定的编码集不对,您目前指定的编码集是:&quot; + charset);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    private static boolean isValidChar(char ch) &#123;</span><br><span class=\"line\">        if ((ch &gt;= &apos;0&apos; &amp;&amp; ch &lt;= &apos;9&apos;) || (ch &gt;= &apos;A&apos; &amp;&amp; ch &lt;= &apos;Z&apos;) || (ch &gt;= &apos;a&apos; &amp;&amp; ch &lt;= &apos;z&apos;))</span><br><span class=\"line\">            return true;</span><br><span class=\"line\">        if ((ch &gt;= 0x4e00 &amp;&amp; ch &lt;= 0x7fff) || (ch &gt;= 0x8000 &amp;&amp; ch &lt;= 0x952f))</span><br><span class=\"line\">            return true;// 简体中文汉字编码     </span><br><span class=\"line\">        return false;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * 除去数组中的空值和签名参数</span><br><span class=\"line\">     *</span><br><span class=\"line\">     * @param sArray 签名参数组</span><br><span class=\"line\">     * @return 去掉空值与签名参数后的新签名参数组</span><br><span class=\"line\">     */</span><br><span class=\"line\">    public static Map&lt;String, String&gt; paraFilter(Map&lt;String, String&gt; sArray) &#123;</span><br><span class=\"line\">        Map&lt;String, String&gt; result = new HashMap&lt;String, String&gt;();</span><br><span class=\"line\">        if (sArray == null || sArray.size() &lt;= 0) &#123;</span><br><span class=\"line\">            return result;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        for (String key : sArray.keySet()) &#123;</span><br><span class=\"line\">            String value = sArray.get(key);</span><br><span class=\"line\">            if (value == null || value.equals(&quot;&quot;) || key.equalsIgnoreCase(&quot;sign&quot;)</span><br><span class=\"line\">                    || key.equalsIgnoreCase(&quot;sign_type&quot;)) &#123;</span><br><span class=\"line\">                continue;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            result.put(key, value);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return result;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * 把数组所有元素排序，并按照“参数=参数值”的模式用“&amp;”字符拼接成字符串</span><br><span class=\"line\">     *</span><br><span class=\"line\">     * @param params 需要排序并参与字符拼接的参数组</span><br><span class=\"line\">     * @return 拼接后字符串</span><br><span class=\"line\">     */</span><br><span class=\"line\">    public static String createLinkString(Map&lt;String, String&gt; params) &#123;</span><br><span class=\"line\">        List&lt;String&gt; keys = new ArrayList&lt;&gt;(params.keySet());</span><br><span class=\"line\">        Collections.sort(keys);</span><br><span class=\"line\">        String prestr = &quot;&quot;;</span><br><span class=\"line\">        for (int i = 0; i &lt; keys.size(); i++) &#123;</span><br><span class=\"line\">            String key = keys.get(i);</span><br><span class=\"line\">            String value = params.get(key);</span><br><span class=\"line\">            if (i == keys.size() - 1) &#123;// 拼接时，不包括最后一个&amp;字符     </span><br><span class=\"line\">                prestr = prestr + key + &quot;=&quot; + value;</span><br><span class=\"line\">            &#125; else &#123;</span><br><span class=\"line\">                prestr = prestr + key + &quot;=&quot; + value + &quot;&amp;&quot;;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return prestr;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * @param requestUrl    请求地址</span><br><span class=\"line\">     * @param requestMethod 请求方法</span><br><span class=\"line\">     * @param outputStr     参数</span><br><span class=\"line\">     */</span><br><span class=\"line\">    public static String httpRequest(String requestUrl, String requestMethod, String outputStr) &#123;</span><br><span class=\"line\">        // 创建SSLContext     </span><br><span class=\"line\">        StringBuffer buffer = null;</span><br><span class=\"line\">        try &#123;</span><br><span class=\"line\">            URL url = new URL(requestUrl);</span><br><span class=\"line\">            HttpURLConnection conn = (HttpURLConnection) url.openConnection();</span><br><span class=\"line\">            conn.setRequestMethod(requestMethod);</span><br><span class=\"line\">            conn.setDoOutput(true);</span><br><span class=\"line\">            conn.setDoInput(true);</span><br><span class=\"line\">            conn.connect();</span><br><span class=\"line\">            //往服务器端写内容     </span><br><span class=\"line\">            if (null != outputStr) &#123;</span><br><span class=\"line\">                OutputStream os = conn.getOutputStream();</span><br><span class=\"line\">                os.write(outputStr.getBytes(&quot;utf-8&quot;));</span><br><span class=\"line\">                os.close();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            // 读取服务器端返回的内容     </span><br><span class=\"line\">            InputStream is = conn.getInputStream();</span><br><span class=\"line\">            InputStreamReader isr = new InputStreamReader(is, &quot;utf-8&quot;);</span><br><span class=\"line\">            BufferedReader br = new BufferedReader(isr);</span><br><span class=\"line\">            buffer = new StringBuffer();</span><br><span class=\"line\">            String line = null;</span><br><span class=\"line\">            while ((line = br.readLine()) != null) &#123;</span><br><span class=\"line\">                buffer.append(line);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            br.close();</span><br><span class=\"line\">        &#125; catch (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return buffer.toString();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public static String urlEncodeUTF8(String source) &#123;</span><br><span class=\"line\">        String result = source;</span><br><span class=\"line\">        try &#123;</span><br><span class=\"line\">            result = java.net.URLEncoder.encode(source, &quot;UTF-8&quot;);</span><br><span class=\"line\">        &#125; catch (UnsupportedEncodingException e) &#123;</span><br><span class=\"line\">            // TODO Auto-generated catch block</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return result;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * 解析xml,返回第一级元素键值对。如果第一级元素有子节点，则此节点的值是子节点的xml数据。</span><br><span class=\"line\">     *</span><br><span class=\"line\">     * @param strxml</span><br><span class=\"line\">     * @return</span><br><span class=\"line\">     * @throws org.jdom2.JDOMException</span><br><span class=\"line\">     * @throws IOException</span><br><span class=\"line\">     */</span><br><span class=\"line\">    public static Map doXMLParse(String strxml) throws Exception &#123;</span><br><span class=\"line\">        if (null == strxml || &quot;&quot;.equals(strxml)) &#123;</span><br><span class=\"line\">            return null;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        Map m = new HashMap();</span><br><span class=\"line\">        InputStream in = String2Inputstream(strxml);</span><br><span class=\"line\">        SAXBuilder builder = new SAXBuilder();</span><br><span class=\"line\">        Document doc = builder.build(in);</span><br><span class=\"line\">        Element root = doc.getRootElement();</span><br><span class=\"line\">        List list = root.getChildren();</span><br><span class=\"line\">        Iterator it = list.iterator();</span><br><span class=\"line\">        while (it.hasNext()) &#123;</span><br><span class=\"line\">            Element e = (Element) it.next();</span><br><span class=\"line\">            String k = e.getName();</span><br><span class=\"line\">            String v = &quot;&quot;;</span><br><span class=\"line\">            List children = e.getChildren();</span><br><span class=\"line\">            if (children.isEmpty()) &#123;</span><br><span class=\"line\">                v = e.getTextNormalize();</span><br><span class=\"line\">            &#125; else &#123;</span><br><span class=\"line\">                v = getChildrenText(children);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            m.put(k, v);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        //关闭流</span><br><span class=\"line\">        in.close();</span><br><span class=\"line\"></span><br><span class=\"line\">        return m;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * 获取子结点的xml</span><br><span class=\"line\">     *</span><br><span class=\"line\">     * @param children</span><br><span class=\"line\">     * @return String</span><br><span class=\"line\">     */</span><br><span class=\"line\">    public static String getChildrenText(List children) &#123;</span><br><span class=\"line\">        StringBuffer sb = new StringBuffer();</span><br><span class=\"line\">        if (!children.isEmpty()) &#123;</span><br><span class=\"line\">            Iterator it = children.iterator();</span><br><span class=\"line\">            while (it.hasNext()) &#123;</span><br><span class=\"line\">                Element e = (Element) it.next();</span><br><span class=\"line\">                String name = e.getName();</span><br><span class=\"line\">                String value = e.getTextNormalize();</span><br><span class=\"line\">                List list = e.getChildren();</span><br><span class=\"line\">                sb.append(&quot;&lt;&quot; + name + &quot;&gt;&quot;);</span><br><span class=\"line\">                if (!list.isEmpty()) &#123;</span><br><span class=\"line\">                    sb.append(getChildrenText(list));</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                sb.append(value);</span><br><span class=\"line\">                sb.append(&quot;&lt;/&quot; + name + &quot;&gt;&quot;);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        return sb.toString();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public static InputStream String2Inputstream(String str) &#123;</span><br><span class=\"line\">        return new ByteArrayInputStream(str.getBytes());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">controller</span><br><span class=\"line\">@Api(tags = &quot;支付模块&quot;)</span><br><span class=\"line\">@RestController</span><br><span class=\"line\">@RequestMapping(&quot;&quot;)</span><br><span class=\"line\">public class PayController &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    @ApiOperation(value = &quot;请求支付接口&quot;)</span><br><span class=\"line\">    @RequestMapping(value = &quot;/wxPay&quot;, method = RequestMethod.POST)</span><br><span class=\"line\">    public JSONObject wxPay(HttpServletRequest request) &#123;</span><br><span class=\"line\">        try &#123;</span><br><span class=\"line\">            //生成的随机字符串</span><br><span class=\"line\">            String nonce_str = getRandomStringByLength(32);</span><br><span class=\"line\">            //商品名称</span><br><span class=\"line\">            String body = &quot;测试商品名称&quot;;</span><br><span class=\"line\">            //获取客户端的ip地址</span><br><span class=\"line\">            String spbill_create_ip = getIpAddr(request);</span><br><span class=\"line\"></span><br><span class=\"line\">            //组装参数，用户生成统一下单接口的签名</span><br><span class=\"line\">            Map&lt;String, String&gt; packageParams = new HashMap&lt;&gt;();</span><br><span class=\"line\">            packageParams.put(&quot;appid&quot;, WechatConfig.appid);</span><br><span class=\"line\">            packageParams.put(&quot;mch_id&quot;, WechatConfig.mch_id);</span><br><span class=\"line\">            packageParams.put(&quot;nonce_str&quot;, nonce_str);</span><br><span class=\"line\">            packageParams.put(&quot;body&quot;, body);</span><br><span class=\"line\">            packageParams.put(&quot;out_trade_no&quot;, payOrderId + &quot;&quot;);//商户订单号,自己的订单ID</span><br><span class=\"line\">            packageParams.put(&quot;total_fee&quot;, 100 + &quot;&quot;);//支付金额，这边需要转成字符串类型，否则后面的签名会失败</span><br><span class=\"line\">            packageParams.put(&quot;spbill_create_ip&quot;, spbill_create_ip);</span><br><span class=\"line\">            packageParams.put(&quot;notify_url&quot;, WechatConfig.notify_url);//支付成功后的回调地址</span><br><span class=\"line\">            packageParams.put(&quot;trade_type&quot;, WechatConfig.TRADETYPE);//支付方式</span><br><span class=\"line\">            packageParams.put(&quot;openid&quot;, openId + &quot;&quot;);//用户的openID，自己获取</span><br><span class=\"line\"></span><br><span class=\"line\">            String prestr = PayUtil.createLinkString(packageParams); // 把数组所有元素，按照“参数=参数值”的模式用“&amp;”字符拼接成字符串</span><br><span class=\"line\"></span><br><span class=\"line\">            //MD5运算生成签名，这里是第一次签名，用于调用统一下单接口</span><br><span class=\"line\">            String mysign = PayUtil.sign(prestr, WechatConfig.key, &quot;utf-8&quot;).toUpperCase();</span><br><span class=\"line\"></span><br><span class=\"line\">            //拼接统一下单接口使用的xml数据，要将上一步生成的签名一起拼接进去</span><br><span class=\"line\">            String xml = &quot;&lt;xml&gt;&quot; + &quot;&lt;appid&gt;&quot; + WechatConfig.appid + &quot;&lt;/appid&gt;&quot;</span><br><span class=\"line\">                    + &quot;&lt;body&gt;&lt;![CDATA[&quot; + body + &quot;]]&gt;&lt;/body&gt;&quot;</span><br><span class=\"line\">                    + &quot;&lt;mch_id&gt;&quot; + WechatConfig.mch_id + &quot;&lt;/mch_id&gt;&quot;</span><br><span class=\"line\">                    + &quot;&lt;nonce_str&gt;&quot; + nonce_str + &quot;&lt;/nonce_str&gt;&quot;</span><br><span class=\"line\">                    + &quot;&lt;notify_url&gt;&quot; + WechatConfig.notify_url + &quot;&lt;/notify_url&gt;&quot;</span><br><span class=\"line\">                    + &quot;&lt;openid&gt;&quot; + openid + &quot;&lt;/openid&gt;&quot;</span><br><span class=\"line\">                    + &quot;&lt;out_trade_no&gt;&quot; + payOrderId + &quot;&lt;/out_trade_no&gt;&quot;</span><br><span class=\"line\">                    + &quot;&lt;spbill_create_ip&gt;&quot; + spbill_create_ip + &quot;&lt;/spbill_create_ip&gt;&quot;</span><br><span class=\"line\">                    + &quot;&lt;total_fee&gt;&quot; + 100 + &quot;&lt;/total_fee&gt;&quot;//支付的金额，单位：分</span><br><span class=\"line\">                    + &quot;&lt;trade_type&gt;&quot; + WechatConfig.TRADETYPE + &quot;&lt;/trade_type&gt;&quot;</span><br><span class=\"line\">                    + &quot;&lt;sign&gt;&quot; + mysign + &quot;&lt;/sign&gt;&quot;</span><br><span class=\"line\">                    + &quot;&lt;/xml&gt;&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">            //调用统一下单接口，并接受返回的结果</span><br><span class=\"line\">            String result = PayUtil.httpRequest(WechatConfig.pay_url, &quot;POST&quot;, xml);</span><br><span class=\"line\"></span><br><span class=\"line\">            // 将解析结果存储在HashMap中</span><br><span class=\"line\">            Map map = PayUtil.doXMLParse(result);</span><br><span class=\"line\"></span><br><span class=\"line\">            String return_code = (String) map.get(&quot;return_code&quot;);//返回状态码</span><br><span class=\"line\">            String result_code = (String) map.get(&quot;result_code&quot;);//返回状态码</span><br><span class=\"line\"></span><br><span class=\"line\">            Map&lt;String, Object&gt; response = new HashMap&lt;String, Object&gt;();//返回给小程序端需要的参数</span><br><span class=\"line\">            if (return_code == &quot;SUCCESS&quot; &amp;&amp; return_code.equals(result_code)) &#123;</span><br><span class=\"line\">                String prepay_id = (String) map.get(&quot;prepay_id&quot;);//返回的预付单信息</span><br><span class=\"line\">                response.put(&quot;nonceStr&quot;, nonce_str);</span><br><span class=\"line\">                response.put(&quot;package&quot;, &quot;prepay_id=&quot; + prepay_id);</span><br><span class=\"line\">                Long timeStamp = System.currentTimeMillis() / 1000;</span><br><span class=\"line\">                response.put(&quot;timeStamp&quot;, timeStamp + &quot;&quot;);//这边要将返回的时间戳转化成字符串，不然小程序端调用wx.requestPayment方法会报签名错误</span><br><span class=\"line\">                //拼接签名需要的参数</span><br><span class=\"line\">                String stringSignTemp = &quot;appId=&quot; + WechatConfig.appid + &quot;&amp;nonceStr=&quot; + nonce_str + &quot;&amp;package=prepay_id=&quot; + prepay_id + &quot;&amp;signType=MD5&amp;timeStamp=&quot; + timeStamp;</span><br><span class=\"line\">                //再次签名，这个签名用于小程序端调用wx.requesetPayment方法</span><br><span class=\"line\">                String paySign = PayUtil.sign(stringSignTemp, WechatConfig.key, &quot;utf-8&quot;).toUpperCase();</span><br><span class=\"line\"></span><br><span class=\"line\">                response.put(&quot;paySign&quot;, paySign);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            response.put(&quot;appid&quot;, WechatConfig.appid);</span><br><span class=\"line\"></span><br><span class=\"line\">            return Response.succ(response);</span><br><span class=\"line\">        &#125; catch (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return null;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    //这里是支付回调接口，微信支付成功后会自动调用</span><br><span class=\"line\">    @RequestMapping(value = &quot;/wxNotify&quot;, method = RequestMethod.POST)</span><br><span class=\"line\">    public void wxNotify(HttpServletRequest request, HttpServletResponse response) throws Exception &#123;</span><br><span class=\"line\">        BufferedReader br = new BufferedReader(new InputStreamReader(request.getInputStream()));</span><br><span class=\"line\">        String line = null;</span><br><span class=\"line\">        StringBuilder sb = new StringBuilder();</span><br><span class=\"line\">        while ((line = br.readLine()) != null) &#123;</span><br><span class=\"line\">            sb.append(line);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        br.close();</span><br><span class=\"line\">        //sb为微信返回的xml</span><br><span class=\"line\">        String notityXml = sb.toString();</span><br><span class=\"line\">        String resXml = &quot;&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">        Map map = PayUtil.doXMLParse(notityXml);</span><br><span class=\"line\"></span><br><span class=\"line\">        String returnCode = (String) map.get(&quot;return_code&quot;);</span><br><span class=\"line\">        if (&quot;SUCCESS&quot;.equals(returnCode)) &#123;</span><br><span class=\"line\">            //验证签名是否正确</span><br><span class=\"line\">            Map&lt;String, String&gt; validParams = PayUtil.paraFilter(map);  //回调验签时需要去除sign和空值参数</span><br><span class=\"line\">            String prestr = PayUtil.createLinkString(validParams); </span><br><span class=\"line\">            //根据微信官网的介绍，此处不仅对回调的参数进行验签，还需要对返回的金额与系统订单的金额进行比对等</span><br><span class=\"line\">            if (PayUtil.verify(prestr, (String) map.get(&quot;sign&quot;), WechatConfig.key, &quot;utf-8&quot;)) &#123;</span><br><span class=\"line\">                /**此处添加自己的业务逻辑代码start**/</span><br><span class=\"line\">                </span><br><span class=\"line\">                //注意要判断微信支付重复回调，支付成功后微信会重复的进行回调</span><br><span class=\"line\">                </span><br><span class=\"line\">                /**此处添加自己的业务逻辑代码end**/</span><br><span class=\"line\">                //通知微信服务器已经支付成功</span><br><span class=\"line\">                resXml = &quot;&lt;xml&gt;&quot; + &quot;&lt;return_code&gt;&lt;![CDATA[SUCCESS]]&gt;&lt;/return_code&gt;&quot;</span><br><span class=\"line\">                        + &quot;&lt;return_msg&gt;&lt;![CDATA[OK]]&gt;&lt;/return_msg&gt;&quot; + &quot;&lt;/xml&gt; &quot;;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; else &#123;</span><br><span class=\"line\">            resXml = &quot;&lt;xml&gt;&quot; + &quot;&lt;return_code&gt;&lt;![CDATA[FAIL]]&gt;&lt;/return_code&gt;&quot;</span><br><span class=\"line\">                    + &quot;&lt;return_msg&gt;&lt;![CDATA[报文为空]]&gt;&lt;/return_msg&gt;&quot; + &quot;&lt;/xml&gt; &quot;;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        BufferedOutputStream out = new BufferedOutputStream(</span><br><span class=\"line\">                response.getOutputStream());</span><br><span class=\"line\">        out.write(resXml.getBytes());</span><br><span class=\"line\">        out.flush();</span><br><span class=\"line\">        out.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    //获取随机字符串</span><br><span class=\"line\">    private String getRandomStringByLength(int length) &#123;</span><br><span class=\"line\">        String base = &quot;abcdefghijklmnopqrstuvwxyz0123456789&quot;;</span><br><span class=\"line\">        Random random = new Random();</span><br><span class=\"line\">        StringBuffer sb = new StringBuffer();</span><br><span class=\"line\">        for (int i = 0; i &lt; length; i++) &#123;</span><br><span class=\"line\">            int number = random.nextInt(base.length());</span><br><span class=\"line\">            sb.append(base.charAt(number));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return sb.toString();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    //获取IP</span><br><span class=\"line\">    private String getIpAddr(HttpServletRequest request) &#123;</span><br><span class=\"line\">        String ip = request.getHeader(&quot;X-Forwarded-For&quot;);</span><br><span class=\"line\">        if (StringUtils.isNotEmpty(ip) &amp;&amp; !&quot;unKnown&quot;.equalsIgnoreCase(ip)) &#123;</span><br><span class=\"line\">            //多次反向代理后会有多个ip值，第一个ip才是真实ip</span><br><span class=\"line\">            int index = ip.indexOf(&quot;,&quot;);</span><br><span class=\"line\">            if (index != -1) &#123;</span><br><span class=\"line\">                return ip.substring(0, index);</span><br><span class=\"line\">            &#125; else &#123;</span><br><span class=\"line\">                return ip;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        ip = request.getHeader(&quot;X-Real-IP&quot;);</span><br><span class=\"line\">        if (StringUtils.isNotEmpty(ip) &amp;&amp; !&quot;unKnown&quot;.equalsIgnoreCase(ip)) &#123;</span><br><span class=\"line\">            return ip;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return request.getRemoteAddr();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"注意点\"><a href=\"#注意点\" class=\"headerlink\" title=\"注意点\"></a>注意点</h2><ol>\n<li>notify_url规则<ul>\n<li>上面的notify_url是微信支付成功时自动调用的回调方法所以一定要是能够直接访问的 </li>\n<li>notify_url必须是直接请求的 方式是POST 不能有参数不能有访问控制 详见微信文档</li>\n<li>这里的回调由于不保证成功所以微信服务器可能存在多次重复调用需要在业务逻辑中判断</li>\n</ul>\n</li>\n<li>这里的参数排序、xml编码等不符合规范都可能出错 这里罗列一种问题</li>\n</ol>\n<h3 id=\"签名错误\"><a href=\"#签名错误\" class=\"headerlink\" title=\"签名错误\"></a>签名错误</h3><ol>\n<li>可能是secret和密钥混淆导致参数错误上传</li>\n<li>可能body参数含有中文字符 或者编码格式有误</li>\n</ol>\n<h1 id=\"支付回调\"><a href=\"#支付回调\" class=\"headerlink\" title=\"支付回调\"></a>支付回调</h1><h1 id=\"支付退款\"><a href=\"#支付退款\" class=\"headerlink\" title=\"支付退款\"></a>支付退款</h1><h2 id=\"退款说明\"><a href=\"#退款说明\" class=\"headerlink\" title=\"退款说明\"></a>退款说明</h2><ol>\n<li>退款文档地址→<a href=\"https://pay.weixin.qq.com/wiki/doc/api/jsapi.php?chapter=9_4\" target=\"_blank\" rel=\"noopener\">申请退款</a></li>\n<li>退款接口 <code>https://api.mch.weixin.qq.com/secapi/pay/refund</code></li>\n<li>退款需要双向证书，上面退款文档地址内有相应的说明</li>\n<li>退款实现逻辑与付款的不同之处<ol>\n<li>退款时除请求地址不同外 还需要携带证书参数</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"代码实现-1\"><a href=\"#代码实现-1\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h2><p>请注意，支付的controller部分的xml组成，参数组成都是可重用的，这里需要在util去新增带证书请求的方法<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">payUtil添加方法</span><br><span class=\"line\"></span><br><span class=\"line\">public static String doRefund(String mchId, String url, String data) throws Exception &#123;</span><br><span class=\"line\">        /**</span><br><span class=\"line\">         * 注意PKCS12证书 是从微信商户平台-》账户设置-》 API安全 中下载的</span><br><span class=\"line\">         */</span><br><span class=\"line\">        KeyStore keyStore = KeyStore.getInstance(&quot;PKCS12&quot;);</span><br><span class=\"line\">        //这里自行实现我是使用数据库配置将证书上传到了服务器可以使用 FileInputStream读取本地文件</span><br><span class=\"line\"></span><br><span class=\"line\">        Resource resource = new ClassPathResource(&quot;static/apiclient_cert.p12&quot;);</span><br><span class=\"line\">        File sourceFile =  resource.getFile();</span><br><span class=\"line\"></span><br><span class=\"line\">//        ClassPathResource classPathResource = new ClassPathResource(&quot;/static/apiclient_cert.p12&quot;);</span><br><span class=\"line\">        FileInputStream inputStream = new FileInputStream(String.valueOf(sourceFile));</span><br><span class=\"line\">        try &#123;</span><br><span class=\"line\">            //这里写密码..默认是你的MCHID</span><br><span class=\"line\">            keyStore.load(inputStream, mchId.toCharArray());</span><br><span class=\"line\">        &#125; finally &#123;</span><br><span class=\"line\">            inputStream.close();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        SSLContext sslcontext = SSLContexts.custom()</span><br><span class=\"line\">                //这里也是写密码的</span><br><span class=\"line\">                .loadKeyMaterial(keyStore, mchId.toCharArray())</span><br><span class=\"line\">                .build();</span><br><span class=\"line\">        SSLConnectionSocketFactory sslsf = new SSLConnectionSocketFactory(</span><br><span class=\"line\">                sslcontext,</span><br><span class=\"line\">                SSLConnectionSocketFactory.getDefaultHostnameVerifier());</span><br><span class=\"line\">        CloseableHttpClient httpclient = HttpClients.custom()</span><br><span class=\"line\">                .setSSLSocketFactory(sslsf)</span><br><span class=\"line\">                .build();</span><br><span class=\"line\">        try &#123;</span><br><span class=\"line\">            HttpPost httpost = new HttpPost(url);</span><br><span class=\"line\">            httpost.setEntity(new StringEntity(data, &quot;UTF-8&quot;));</span><br><span class=\"line\">            CloseableHttpResponse response = httpclient.execute(httpost);</span><br><span class=\"line\">            try &#123;</span><br><span class=\"line\">                HttpEntity entity = response.getEntity();</span><br><span class=\"line\">                //接受到返回信息</span><br><span class=\"line\">                String jsonStr = EntityUtils.toString(response.getEntity(), &quot;UTF-8&quot;);</span><br><span class=\"line\">                EntityUtils.consume(entity);</span><br><span class=\"line\">                return jsonStr;</span><br><span class=\"line\">            &#125; finally &#123;</span><br><span class=\"line\">                response.close();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; finally &#123;</span><br><span class=\"line\">            httpclient.close();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"注意点-1\"><a href=\"#注意点-1\" class=\"headerlink\" title=\"注意点\"></a>注意点</h2><h3 id=\"签名错误-1\"><a href=\"#签名错误-1\" class=\"headerlink\" title=\"签名错误\"></a>签名错误</h3><ol>\n<li>这里的签名错误同样可能是参数没用按照ASCII码排序导致的 可以通过官方的测试工具调整判断是否满足条件→<a href=\"https://pay.weixin.qq.com/wiki/doc/api/jsapi.php?chapter=20_1\" target=\"_blank\" rel=\"noopener\">验证格式</a></li>\n<li>这里的回调参数需要网址形式 ip好像不能通过</li>\n</ol>\n<h1 id=\"余额提现\"><a href=\"#余额提现\" class=\"headerlink\" title=\"余额提现\"></a>余额提现</h1><h2 id=\"絮叨一下\"><a href=\"#絮叨一下\" class=\"headerlink\" title=\"絮叨一下\"></a>絮叨一下</h2><p>这里来补充了 提现功能就是支付平台的企业付款到零钱，我们在提现前需要达到微信支付平台的要求，支付开通时间超过一个季度并且流水30天不间断(是否一季度参考支付平台 记不清了╮(╯▽╰)╭)</p>\n<h2 id=\"实现过程\"><a href=\"#实现过程\" class=\"headerlink\" title=\"实现过程\"></a>实现过程</h2><p>这里我们只简单记录一下参数以及简单说明注意点</p>\n<h3 id=\"代码实现-2\"><a href=\"#代码实现-2\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h3><p>这里大致步骤与上面一致 就直接贴参数了<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Map&lt;String, String&gt; packageParams = new HashMap&lt;&gt;();</span><br><span class=\"line\">   packageParams.put(&quot;amount&quot;,amount);</span><br><span class=\"line\">   packageParams.put(&quot;check_name&quot;,check_name);</span><br><span class=\"line\">   packageParams.put(&quot;desc&quot;,desc);</span><br><span class=\"line\">   packageParams.put(&quot;mch_appid&quot;, WechatConfig.appid);</span><br><span class=\"line\">   packageParams.put(&quot;mchid&quot;, WechatConfig.mch_id);</span><br><span class=\"line\">   packageParams.put(&quot;nonce_str&quot;, nonce_str);</span><br><span class=\"line\">   packageParams.put(&quot;openid&quot;, openId + &quot;&quot;);//用户的openID，自己获取</span><br><span class=\"line\">   packageParams.put(&quot;partner_trade_no&quot;, payOrderId + &quot;&quot;);//商户订单号,自己的订单ID</span><br><span class=\"line\">   packageParams.put(&quot;spbill_create_ip&quot;, spbill_create_ip);//商户订单号,自己的订单ID</span><br><span class=\"line\"></span><br><span class=\"line\">   String prestr = PayUtil.createLinkString(packageParams); // 把数组所有元素，按照“参数=参数值”的模式用“&amp;”字符拼接成字符串</span><br></pre></td></tr></table></figure></p>\n<p>然后xml→发送请求得到success即成功到账</p>\n<h3 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h3><ol>\n<li>这里需要双向证书请求</li>\n</ol>\n<h2 id=\"end\"><a href=\"#end\" class=\"headerlink\" title=\"end\"></a>end</h2><p>还有些功能没有总结 后期补充</p>\n","more":"</p>\n<h1 id=\"微信支付\"><a href=\"#微信支付\" class=\"headerlink\" title=\"微信支付\"></a>微信支付</h1><h2 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h2><p>我们需要从小程序和商户平台获取如下参数 </p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">参数名称</th>\n<th style=\"text-align:center\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">appid</td>\n<td style=\"text-align:center\">小程序appid</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">mch_id</td>\n<td style=\"text-align:center\">商户id</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">key</td>\n<td style=\"text-align:center\">商户密钥</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">配置类 wechatConfig(来源woniu95)</span><br><span class=\"line\">public class WechatConfig &#123;</span><br><span class=\"line\">    //小程序appid</span><br><span class=\"line\">    public static final String appid = &quot;&quot;;</span><br><span class=\"line\">    //微信支付的商户id</span><br><span class=\"line\">    public static final String mch_id = &quot;&quot;;</span><br><span class=\"line\">    //微信支付的商户密钥</span><br><span class=\"line\">    public static final String key = &quot;&quot;;</span><br><span class=\"line\">    //支付成功后的服务器回调url，这里填PayController里的回调函数地址</span><br><span class=\"line\">    public static final String notify_url = &quot;&quot;;</span><br><span class=\"line\">    //签名方式，固定值</span><br><span class=\"line\">    public static final String SIGNTYPE = &quot;MD5&quot;;</span><br><span class=\"line\">    //交易类型，小程序支付的固定值为JSAPI</span><br><span class=\"line\">    public static final String TRADETYPE = &quot;JSAPI&quot;;</span><br><span class=\"line\">    //微信统一下单接口地址</span><br><span class=\"line\">    public static final String pay_url = &quot;https://api.mch.weixin.qq.com/pay/unifiedorder&quot;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">工具类 payutil</span><br><span class=\"line\">public class PayUtil &#123;</span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * 签名字符串</span><br><span class=\"line\">     *</span><br><span class=\"line\">     * @param text          需要签名的字符串</span><br><span class=\"line\">     * @param key           密钥</span><br><span class=\"line\">     * @param input_charset 编码格式</span><br><span class=\"line\">     * @return 签名结果</span><br><span class=\"line\">     */</span><br><span class=\"line\">    public static String sign(String text, String key, String input_charset) &#123;</span><br><span class=\"line\">        text = text + &quot;&amp;key=&quot; + key;</span><br><span class=\"line\">        return DigestUtils.md5Hex(getContentBytes(text, input_charset));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * 签名字符串</span><br><span class=\"line\">     *</span><br><span class=\"line\">     * @param text          需要签名的字符串</span><br><span class=\"line\">     * @param sign          签名结果</span><br><span class=\"line\">     * @param key           密钥</span><br><span class=\"line\">     * @param input_charset 编码格式</span><br><span class=\"line\">     * @return 签名结果</span><br><span class=\"line\">     */</span><br><span class=\"line\">    public static boolean verify(String text, String sign, String key, String input_charset) &#123;</span><br><span class=\"line\">        text = text + key;</span><br><span class=\"line\">        String mysign = DigestUtils.md5Hex(getContentBytes(text, input_charset));</span><br><span class=\"line\">        if (mysign.equals(sign)) &#123;</span><br><span class=\"line\">            return true;</span><br><span class=\"line\">        &#125; else &#123;</span><br><span class=\"line\">            return false;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * @param content</span><br><span class=\"line\">     * @param charset</span><br><span class=\"line\">     * @return</span><br><span class=\"line\">     * @throws java.security.SignatureException</span><br><span class=\"line\">     * @throws UnsupportedEncodingException</span><br><span class=\"line\">     */</span><br><span class=\"line\">    public static byte[] getContentBytes(String content, String charset) &#123;</span><br><span class=\"line\">        if (charset == null || &quot;&quot;.equals(charset)) &#123;</span><br><span class=\"line\">            return content.getBytes();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        try &#123;</span><br><span class=\"line\">            return content.getBytes(charset);</span><br><span class=\"line\">        &#125; catch (UnsupportedEncodingException e) &#123;</span><br><span class=\"line\">            throw new RuntimeException(&quot;MD5签名过程中出现错误,指定的编码集不对,您目前指定的编码集是:&quot; + charset);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    private static boolean isValidChar(char ch) &#123;</span><br><span class=\"line\">        if ((ch &gt;= &apos;0&apos; &amp;&amp; ch &lt;= &apos;9&apos;) || (ch &gt;= &apos;A&apos; &amp;&amp; ch &lt;= &apos;Z&apos;) || (ch &gt;= &apos;a&apos; &amp;&amp; ch &lt;= &apos;z&apos;))</span><br><span class=\"line\">            return true;</span><br><span class=\"line\">        if ((ch &gt;= 0x4e00 &amp;&amp; ch &lt;= 0x7fff) || (ch &gt;= 0x8000 &amp;&amp; ch &lt;= 0x952f))</span><br><span class=\"line\">            return true;// 简体中文汉字编码     </span><br><span class=\"line\">        return false;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * 除去数组中的空值和签名参数</span><br><span class=\"line\">     *</span><br><span class=\"line\">     * @param sArray 签名参数组</span><br><span class=\"line\">     * @return 去掉空值与签名参数后的新签名参数组</span><br><span class=\"line\">     */</span><br><span class=\"line\">    public static Map&lt;String, String&gt; paraFilter(Map&lt;String, String&gt; sArray) &#123;</span><br><span class=\"line\">        Map&lt;String, String&gt; result = new HashMap&lt;String, String&gt;();</span><br><span class=\"line\">        if (sArray == null || sArray.size() &lt;= 0) &#123;</span><br><span class=\"line\">            return result;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        for (String key : sArray.keySet()) &#123;</span><br><span class=\"line\">            String value = sArray.get(key);</span><br><span class=\"line\">            if (value == null || value.equals(&quot;&quot;) || key.equalsIgnoreCase(&quot;sign&quot;)</span><br><span class=\"line\">                    || key.equalsIgnoreCase(&quot;sign_type&quot;)) &#123;</span><br><span class=\"line\">                continue;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            result.put(key, value);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return result;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * 把数组所有元素排序，并按照“参数=参数值”的模式用“&amp;”字符拼接成字符串</span><br><span class=\"line\">     *</span><br><span class=\"line\">     * @param params 需要排序并参与字符拼接的参数组</span><br><span class=\"line\">     * @return 拼接后字符串</span><br><span class=\"line\">     */</span><br><span class=\"line\">    public static String createLinkString(Map&lt;String, String&gt; params) &#123;</span><br><span class=\"line\">        List&lt;String&gt; keys = new ArrayList&lt;&gt;(params.keySet());</span><br><span class=\"line\">        Collections.sort(keys);</span><br><span class=\"line\">        String prestr = &quot;&quot;;</span><br><span class=\"line\">        for (int i = 0; i &lt; keys.size(); i++) &#123;</span><br><span class=\"line\">            String key = keys.get(i);</span><br><span class=\"line\">            String value = params.get(key);</span><br><span class=\"line\">            if (i == keys.size() - 1) &#123;// 拼接时，不包括最后一个&amp;字符     </span><br><span class=\"line\">                prestr = prestr + key + &quot;=&quot; + value;</span><br><span class=\"line\">            &#125; else &#123;</span><br><span class=\"line\">                prestr = prestr + key + &quot;=&quot; + value + &quot;&amp;&quot;;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return prestr;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * @param requestUrl    请求地址</span><br><span class=\"line\">     * @param requestMethod 请求方法</span><br><span class=\"line\">     * @param outputStr     参数</span><br><span class=\"line\">     */</span><br><span class=\"line\">    public static String httpRequest(String requestUrl, String requestMethod, String outputStr) &#123;</span><br><span class=\"line\">        // 创建SSLContext     </span><br><span class=\"line\">        StringBuffer buffer = null;</span><br><span class=\"line\">        try &#123;</span><br><span class=\"line\">            URL url = new URL(requestUrl);</span><br><span class=\"line\">            HttpURLConnection conn = (HttpURLConnection) url.openConnection();</span><br><span class=\"line\">            conn.setRequestMethod(requestMethod);</span><br><span class=\"line\">            conn.setDoOutput(true);</span><br><span class=\"line\">            conn.setDoInput(true);</span><br><span class=\"line\">            conn.connect();</span><br><span class=\"line\">            //往服务器端写内容     </span><br><span class=\"line\">            if (null != outputStr) &#123;</span><br><span class=\"line\">                OutputStream os = conn.getOutputStream();</span><br><span class=\"line\">                os.write(outputStr.getBytes(&quot;utf-8&quot;));</span><br><span class=\"line\">                os.close();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            // 读取服务器端返回的内容     </span><br><span class=\"line\">            InputStream is = conn.getInputStream();</span><br><span class=\"line\">            InputStreamReader isr = new InputStreamReader(is, &quot;utf-8&quot;);</span><br><span class=\"line\">            BufferedReader br = new BufferedReader(isr);</span><br><span class=\"line\">            buffer = new StringBuffer();</span><br><span class=\"line\">            String line = null;</span><br><span class=\"line\">            while ((line = br.readLine()) != null) &#123;</span><br><span class=\"line\">                buffer.append(line);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            br.close();</span><br><span class=\"line\">        &#125; catch (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return buffer.toString();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public static String urlEncodeUTF8(String source) &#123;</span><br><span class=\"line\">        String result = source;</span><br><span class=\"line\">        try &#123;</span><br><span class=\"line\">            result = java.net.URLEncoder.encode(source, &quot;UTF-8&quot;);</span><br><span class=\"line\">        &#125; catch (UnsupportedEncodingException e) &#123;</span><br><span class=\"line\">            // TODO Auto-generated catch block</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return result;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * 解析xml,返回第一级元素键值对。如果第一级元素有子节点，则此节点的值是子节点的xml数据。</span><br><span class=\"line\">     *</span><br><span class=\"line\">     * @param strxml</span><br><span class=\"line\">     * @return</span><br><span class=\"line\">     * @throws org.jdom2.JDOMException</span><br><span class=\"line\">     * @throws IOException</span><br><span class=\"line\">     */</span><br><span class=\"line\">    public static Map doXMLParse(String strxml) throws Exception &#123;</span><br><span class=\"line\">        if (null == strxml || &quot;&quot;.equals(strxml)) &#123;</span><br><span class=\"line\">            return null;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        Map m = new HashMap();</span><br><span class=\"line\">        InputStream in = String2Inputstream(strxml);</span><br><span class=\"line\">        SAXBuilder builder = new SAXBuilder();</span><br><span class=\"line\">        Document doc = builder.build(in);</span><br><span class=\"line\">        Element root = doc.getRootElement();</span><br><span class=\"line\">        List list = root.getChildren();</span><br><span class=\"line\">        Iterator it = list.iterator();</span><br><span class=\"line\">        while (it.hasNext()) &#123;</span><br><span class=\"line\">            Element e = (Element) it.next();</span><br><span class=\"line\">            String k = e.getName();</span><br><span class=\"line\">            String v = &quot;&quot;;</span><br><span class=\"line\">            List children = e.getChildren();</span><br><span class=\"line\">            if (children.isEmpty()) &#123;</span><br><span class=\"line\">                v = e.getTextNormalize();</span><br><span class=\"line\">            &#125; else &#123;</span><br><span class=\"line\">                v = getChildrenText(children);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            m.put(k, v);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        //关闭流</span><br><span class=\"line\">        in.close();</span><br><span class=\"line\"></span><br><span class=\"line\">        return m;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * 获取子结点的xml</span><br><span class=\"line\">     *</span><br><span class=\"line\">     * @param children</span><br><span class=\"line\">     * @return String</span><br><span class=\"line\">     */</span><br><span class=\"line\">    public static String getChildrenText(List children) &#123;</span><br><span class=\"line\">        StringBuffer sb = new StringBuffer();</span><br><span class=\"line\">        if (!children.isEmpty()) &#123;</span><br><span class=\"line\">            Iterator it = children.iterator();</span><br><span class=\"line\">            while (it.hasNext()) &#123;</span><br><span class=\"line\">                Element e = (Element) it.next();</span><br><span class=\"line\">                String name = e.getName();</span><br><span class=\"line\">                String value = e.getTextNormalize();</span><br><span class=\"line\">                List list = e.getChildren();</span><br><span class=\"line\">                sb.append(&quot;&lt;&quot; + name + &quot;&gt;&quot;);</span><br><span class=\"line\">                if (!list.isEmpty()) &#123;</span><br><span class=\"line\">                    sb.append(getChildrenText(list));</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                sb.append(value);</span><br><span class=\"line\">                sb.append(&quot;&lt;/&quot; + name + &quot;&gt;&quot;);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        return sb.toString();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public static InputStream String2Inputstream(String str) &#123;</span><br><span class=\"line\">        return new ByteArrayInputStream(str.getBytes());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">controller</span><br><span class=\"line\">@Api(tags = &quot;支付模块&quot;)</span><br><span class=\"line\">@RestController</span><br><span class=\"line\">@RequestMapping(&quot;&quot;)</span><br><span class=\"line\">public class PayController &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    @ApiOperation(value = &quot;请求支付接口&quot;)</span><br><span class=\"line\">    @RequestMapping(value = &quot;/wxPay&quot;, method = RequestMethod.POST)</span><br><span class=\"line\">    public JSONObject wxPay(HttpServletRequest request) &#123;</span><br><span class=\"line\">        try &#123;</span><br><span class=\"line\">            //生成的随机字符串</span><br><span class=\"line\">            String nonce_str = getRandomStringByLength(32);</span><br><span class=\"line\">            //商品名称</span><br><span class=\"line\">            String body = &quot;测试商品名称&quot;;</span><br><span class=\"line\">            //获取客户端的ip地址</span><br><span class=\"line\">            String spbill_create_ip = getIpAddr(request);</span><br><span class=\"line\"></span><br><span class=\"line\">            //组装参数，用户生成统一下单接口的签名</span><br><span class=\"line\">            Map&lt;String, String&gt; packageParams = new HashMap&lt;&gt;();</span><br><span class=\"line\">            packageParams.put(&quot;appid&quot;, WechatConfig.appid);</span><br><span class=\"line\">            packageParams.put(&quot;mch_id&quot;, WechatConfig.mch_id);</span><br><span class=\"line\">            packageParams.put(&quot;nonce_str&quot;, nonce_str);</span><br><span class=\"line\">            packageParams.put(&quot;body&quot;, body);</span><br><span class=\"line\">            packageParams.put(&quot;out_trade_no&quot;, payOrderId + &quot;&quot;);//商户订单号,自己的订单ID</span><br><span class=\"line\">            packageParams.put(&quot;total_fee&quot;, 100 + &quot;&quot;);//支付金额，这边需要转成字符串类型，否则后面的签名会失败</span><br><span class=\"line\">            packageParams.put(&quot;spbill_create_ip&quot;, spbill_create_ip);</span><br><span class=\"line\">            packageParams.put(&quot;notify_url&quot;, WechatConfig.notify_url);//支付成功后的回调地址</span><br><span class=\"line\">            packageParams.put(&quot;trade_type&quot;, WechatConfig.TRADETYPE);//支付方式</span><br><span class=\"line\">            packageParams.put(&quot;openid&quot;, openId + &quot;&quot;);//用户的openID，自己获取</span><br><span class=\"line\"></span><br><span class=\"line\">            String prestr = PayUtil.createLinkString(packageParams); // 把数组所有元素，按照“参数=参数值”的模式用“&amp;”字符拼接成字符串</span><br><span class=\"line\"></span><br><span class=\"line\">            //MD5运算生成签名，这里是第一次签名，用于调用统一下单接口</span><br><span class=\"line\">            String mysign = PayUtil.sign(prestr, WechatConfig.key, &quot;utf-8&quot;).toUpperCase();</span><br><span class=\"line\"></span><br><span class=\"line\">            //拼接统一下单接口使用的xml数据，要将上一步生成的签名一起拼接进去</span><br><span class=\"line\">            String xml = &quot;&lt;xml&gt;&quot; + &quot;&lt;appid&gt;&quot; + WechatConfig.appid + &quot;&lt;/appid&gt;&quot;</span><br><span class=\"line\">                    + &quot;&lt;body&gt;&lt;![CDATA[&quot; + body + &quot;]]&gt;&lt;/body&gt;&quot;</span><br><span class=\"line\">                    + &quot;&lt;mch_id&gt;&quot; + WechatConfig.mch_id + &quot;&lt;/mch_id&gt;&quot;</span><br><span class=\"line\">                    + &quot;&lt;nonce_str&gt;&quot; + nonce_str + &quot;&lt;/nonce_str&gt;&quot;</span><br><span class=\"line\">                    + &quot;&lt;notify_url&gt;&quot; + WechatConfig.notify_url + &quot;&lt;/notify_url&gt;&quot;</span><br><span class=\"line\">                    + &quot;&lt;openid&gt;&quot; + openid + &quot;&lt;/openid&gt;&quot;</span><br><span class=\"line\">                    + &quot;&lt;out_trade_no&gt;&quot; + payOrderId + &quot;&lt;/out_trade_no&gt;&quot;</span><br><span class=\"line\">                    + &quot;&lt;spbill_create_ip&gt;&quot; + spbill_create_ip + &quot;&lt;/spbill_create_ip&gt;&quot;</span><br><span class=\"line\">                    + &quot;&lt;total_fee&gt;&quot; + 100 + &quot;&lt;/total_fee&gt;&quot;//支付的金额，单位：分</span><br><span class=\"line\">                    + &quot;&lt;trade_type&gt;&quot; + WechatConfig.TRADETYPE + &quot;&lt;/trade_type&gt;&quot;</span><br><span class=\"line\">                    + &quot;&lt;sign&gt;&quot; + mysign + &quot;&lt;/sign&gt;&quot;</span><br><span class=\"line\">                    + &quot;&lt;/xml&gt;&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">            //调用统一下单接口，并接受返回的结果</span><br><span class=\"line\">            String result = PayUtil.httpRequest(WechatConfig.pay_url, &quot;POST&quot;, xml);</span><br><span class=\"line\"></span><br><span class=\"line\">            // 将解析结果存储在HashMap中</span><br><span class=\"line\">            Map map = PayUtil.doXMLParse(result);</span><br><span class=\"line\"></span><br><span class=\"line\">            String return_code = (String) map.get(&quot;return_code&quot;);//返回状态码</span><br><span class=\"line\">            String result_code = (String) map.get(&quot;result_code&quot;);//返回状态码</span><br><span class=\"line\"></span><br><span class=\"line\">            Map&lt;String, Object&gt; response = new HashMap&lt;String, Object&gt;();//返回给小程序端需要的参数</span><br><span class=\"line\">            if (return_code == &quot;SUCCESS&quot; &amp;&amp; return_code.equals(result_code)) &#123;</span><br><span class=\"line\">                String prepay_id = (String) map.get(&quot;prepay_id&quot;);//返回的预付单信息</span><br><span class=\"line\">                response.put(&quot;nonceStr&quot;, nonce_str);</span><br><span class=\"line\">                response.put(&quot;package&quot;, &quot;prepay_id=&quot; + prepay_id);</span><br><span class=\"line\">                Long timeStamp = System.currentTimeMillis() / 1000;</span><br><span class=\"line\">                response.put(&quot;timeStamp&quot;, timeStamp + &quot;&quot;);//这边要将返回的时间戳转化成字符串，不然小程序端调用wx.requestPayment方法会报签名错误</span><br><span class=\"line\">                //拼接签名需要的参数</span><br><span class=\"line\">                String stringSignTemp = &quot;appId=&quot; + WechatConfig.appid + &quot;&amp;nonceStr=&quot; + nonce_str + &quot;&amp;package=prepay_id=&quot; + prepay_id + &quot;&amp;signType=MD5&amp;timeStamp=&quot; + timeStamp;</span><br><span class=\"line\">                //再次签名，这个签名用于小程序端调用wx.requesetPayment方法</span><br><span class=\"line\">                String paySign = PayUtil.sign(stringSignTemp, WechatConfig.key, &quot;utf-8&quot;).toUpperCase();</span><br><span class=\"line\"></span><br><span class=\"line\">                response.put(&quot;paySign&quot;, paySign);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            response.put(&quot;appid&quot;, WechatConfig.appid);</span><br><span class=\"line\"></span><br><span class=\"line\">            return Response.succ(response);</span><br><span class=\"line\">        &#125; catch (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return null;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    //这里是支付回调接口，微信支付成功后会自动调用</span><br><span class=\"line\">    @RequestMapping(value = &quot;/wxNotify&quot;, method = RequestMethod.POST)</span><br><span class=\"line\">    public void wxNotify(HttpServletRequest request, HttpServletResponse response) throws Exception &#123;</span><br><span class=\"line\">        BufferedReader br = new BufferedReader(new InputStreamReader(request.getInputStream()));</span><br><span class=\"line\">        String line = null;</span><br><span class=\"line\">        StringBuilder sb = new StringBuilder();</span><br><span class=\"line\">        while ((line = br.readLine()) != null) &#123;</span><br><span class=\"line\">            sb.append(line);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        br.close();</span><br><span class=\"line\">        //sb为微信返回的xml</span><br><span class=\"line\">        String notityXml = sb.toString();</span><br><span class=\"line\">        String resXml = &quot;&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">        Map map = PayUtil.doXMLParse(notityXml);</span><br><span class=\"line\"></span><br><span class=\"line\">        String returnCode = (String) map.get(&quot;return_code&quot;);</span><br><span class=\"line\">        if (&quot;SUCCESS&quot;.equals(returnCode)) &#123;</span><br><span class=\"line\">            //验证签名是否正确</span><br><span class=\"line\">            Map&lt;String, String&gt; validParams = PayUtil.paraFilter(map);  //回调验签时需要去除sign和空值参数</span><br><span class=\"line\">            String prestr = PayUtil.createLinkString(validParams); </span><br><span class=\"line\">            //根据微信官网的介绍，此处不仅对回调的参数进行验签，还需要对返回的金额与系统订单的金额进行比对等</span><br><span class=\"line\">            if (PayUtil.verify(prestr, (String) map.get(&quot;sign&quot;), WechatConfig.key, &quot;utf-8&quot;)) &#123;</span><br><span class=\"line\">                /**此处添加自己的业务逻辑代码start**/</span><br><span class=\"line\">                </span><br><span class=\"line\">                //注意要判断微信支付重复回调，支付成功后微信会重复的进行回调</span><br><span class=\"line\">                </span><br><span class=\"line\">                /**此处添加自己的业务逻辑代码end**/</span><br><span class=\"line\">                //通知微信服务器已经支付成功</span><br><span class=\"line\">                resXml = &quot;&lt;xml&gt;&quot; + &quot;&lt;return_code&gt;&lt;![CDATA[SUCCESS]]&gt;&lt;/return_code&gt;&quot;</span><br><span class=\"line\">                        + &quot;&lt;return_msg&gt;&lt;![CDATA[OK]]&gt;&lt;/return_msg&gt;&quot; + &quot;&lt;/xml&gt; &quot;;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; else &#123;</span><br><span class=\"line\">            resXml = &quot;&lt;xml&gt;&quot; + &quot;&lt;return_code&gt;&lt;![CDATA[FAIL]]&gt;&lt;/return_code&gt;&quot;</span><br><span class=\"line\">                    + &quot;&lt;return_msg&gt;&lt;![CDATA[报文为空]]&gt;&lt;/return_msg&gt;&quot; + &quot;&lt;/xml&gt; &quot;;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        BufferedOutputStream out = new BufferedOutputStream(</span><br><span class=\"line\">                response.getOutputStream());</span><br><span class=\"line\">        out.write(resXml.getBytes());</span><br><span class=\"line\">        out.flush();</span><br><span class=\"line\">        out.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    //获取随机字符串</span><br><span class=\"line\">    private String getRandomStringByLength(int length) &#123;</span><br><span class=\"line\">        String base = &quot;abcdefghijklmnopqrstuvwxyz0123456789&quot;;</span><br><span class=\"line\">        Random random = new Random();</span><br><span class=\"line\">        StringBuffer sb = new StringBuffer();</span><br><span class=\"line\">        for (int i = 0; i &lt; length; i++) &#123;</span><br><span class=\"line\">            int number = random.nextInt(base.length());</span><br><span class=\"line\">            sb.append(base.charAt(number));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return sb.toString();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    //获取IP</span><br><span class=\"line\">    private String getIpAddr(HttpServletRequest request) &#123;</span><br><span class=\"line\">        String ip = request.getHeader(&quot;X-Forwarded-For&quot;);</span><br><span class=\"line\">        if (StringUtils.isNotEmpty(ip) &amp;&amp; !&quot;unKnown&quot;.equalsIgnoreCase(ip)) &#123;</span><br><span class=\"line\">            //多次反向代理后会有多个ip值，第一个ip才是真实ip</span><br><span class=\"line\">            int index = ip.indexOf(&quot;,&quot;);</span><br><span class=\"line\">            if (index != -1) &#123;</span><br><span class=\"line\">                return ip.substring(0, index);</span><br><span class=\"line\">            &#125; else &#123;</span><br><span class=\"line\">                return ip;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        ip = request.getHeader(&quot;X-Real-IP&quot;);</span><br><span class=\"line\">        if (StringUtils.isNotEmpty(ip) &amp;&amp; !&quot;unKnown&quot;.equalsIgnoreCase(ip)) &#123;</span><br><span class=\"line\">            return ip;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return request.getRemoteAddr();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"注意点\"><a href=\"#注意点\" class=\"headerlink\" title=\"注意点\"></a>注意点</h2><ol>\n<li>notify_url规则<ul>\n<li>上面的notify_url是微信支付成功时自动调用的回调方法所以一定要是能够直接访问的 </li>\n<li>notify_url必须是直接请求的 方式是POST 不能有参数不能有访问控制 详见微信文档</li>\n<li>这里的回调由于不保证成功所以微信服务器可能存在多次重复调用需要在业务逻辑中判断</li>\n</ul>\n</li>\n<li>这里的参数排序、xml编码等不符合规范都可能出错 这里罗列一种问题</li>\n</ol>\n<h3 id=\"签名错误\"><a href=\"#签名错误\" class=\"headerlink\" title=\"签名错误\"></a>签名错误</h3><ol>\n<li>可能是secret和密钥混淆导致参数错误上传</li>\n<li>可能body参数含有中文字符 或者编码格式有误</li>\n</ol>\n<h1 id=\"支付回调\"><a href=\"#支付回调\" class=\"headerlink\" title=\"支付回调\"></a>支付回调</h1><h1 id=\"支付退款\"><a href=\"#支付退款\" class=\"headerlink\" title=\"支付退款\"></a>支付退款</h1><h2 id=\"退款说明\"><a href=\"#退款说明\" class=\"headerlink\" title=\"退款说明\"></a>退款说明</h2><ol>\n<li>退款文档地址→<a href=\"https://pay.weixin.qq.com/wiki/doc/api/jsapi.php?chapter=9_4\" target=\"_blank\" rel=\"noopener\">申请退款</a></li>\n<li>退款接口 <code>https://api.mch.weixin.qq.com/secapi/pay/refund</code></li>\n<li>退款需要双向证书，上面退款文档地址内有相应的说明</li>\n<li>退款实现逻辑与付款的不同之处<ol>\n<li>退款时除请求地址不同外 还需要携带证书参数</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"代码实现-1\"><a href=\"#代码实现-1\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h2><p>请注意，支付的controller部分的xml组成，参数组成都是可重用的，这里需要在util去新增带证书请求的方法<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">payUtil添加方法</span><br><span class=\"line\"></span><br><span class=\"line\">public static String doRefund(String mchId, String url, String data) throws Exception &#123;</span><br><span class=\"line\">        /**</span><br><span class=\"line\">         * 注意PKCS12证书 是从微信商户平台-》账户设置-》 API安全 中下载的</span><br><span class=\"line\">         */</span><br><span class=\"line\">        KeyStore keyStore = KeyStore.getInstance(&quot;PKCS12&quot;);</span><br><span class=\"line\">        //这里自行实现我是使用数据库配置将证书上传到了服务器可以使用 FileInputStream读取本地文件</span><br><span class=\"line\"></span><br><span class=\"line\">        Resource resource = new ClassPathResource(&quot;static/apiclient_cert.p12&quot;);</span><br><span class=\"line\">        File sourceFile =  resource.getFile();</span><br><span class=\"line\"></span><br><span class=\"line\">//        ClassPathResource classPathResource = new ClassPathResource(&quot;/static/apiclient_cert.p12&quot;);</span><br><span class=\"line\">        FileInputStream inputStream = new FileInputStream(String.valueOf(sourceFile));</span><br><span class=\"line\">        try &#123;</span><br><span class=\"line\">            //这里写密码..默认是你的MCHID</span><br><span class=\"line\">            keyStore.load(inputStream, mchId.toCharArray());</span><br><span class=\"line\">        &#125; finally &#123;</span><br><span class=\"line\">            inputStream.close();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        SSLContext sslcontext = SSLContexts.custom()</span><br><span class=\"line\">                //这里也是写密码的</span><br><span class=\"line\">                .loadKeyMaterial(keyStore, mchId.toCharArray())</span><br><span class=\"line\">                .build();</span><br><span class=\"line\">        SSLConnectionSocketFactory sslsf = new SSLConnectionSocketFactory(</span><br><span class=\"line\">                sslcontext,</span><br><span class=\"line\">                SSLConnectionSocketFactory.getDefaultHostnameVerifier());</span><br><span class=\"line\">        CloseableHttpClient httpclient = HttpClients.custom()</span><br><span class=\"line\">                .setSSLSocketFactory(sslsf)</span><br><span class=\"line\">                .build();</span><br><span class=\"line\">        try &#123;</span><br><span class=\"line\">            HttpPost httpost = new HttpPost(url);</span><br><span class=\"line\">            httpost.setEntity(new StringEntity(data, &quot;UTF-8&quot;));</span><br><span class=\"line\">            CloseableHttpResponse response = httpclient.execute(httpost);</span><br><span class=\"line\">            try &#123;</span><br><span class=\"line\">                HttpEntity entity = response.getEntity();</span><br><span class=\"line\">                //接受到返回信息</span><br><span class=\"line\">                String jsonStr = EntityUtils.toString(response.getEntity(), &quot;UTF-8&quot;);</span><br><span class=\"line\">                EntityUtils.consume(entity);</span><br><span class=\"line\">                return jsonStr;</span><br><span class=\"line\">            &#125; finally &#123;</span><br><span class=\"line\">                response.close();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; finally &#123;</span><br><span class=\"line\">            httpclient.close();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"注意点-1\"><a href=\"#注意点-1\" class=\"headerlink\" title=\"注意点\"></a>注意点</h2><h3 id=\"签名错误-1\"><a href=\"#签名错误-1\" class=\"headerlink\" title=\"签名错误\"></a>签名错误</h3><ol>\n<li>这里的签名错误同样可能是参数没用按照ASCII码排序导致的 可以通过官方的测试工具调整判断是否满足条件→<a href=\"https://pay.weixin.qq.com/wiki/doc/api/jsapi.php?chapter=20_1\" target=\"_blank\" rel=\"noopener\">验证格式</a></li>\n<li>这里的回调参数需要网址形式 ip好像不能通过</li>\n</ol>\n<h1 id=\"余额提现\"><a href=\"#余额提现\" class=\"headerlink\" title=\"余额提现\"></a>余额提现</h1><h2 id=\"絮叨一下\"><a href=\"#絮叨一下\" class=\"headerlink\" title=\"絮叨一下\"></a>絮叨一下</h2><p>这里来补充了 提现功能就是支付平台的企业付款到零钱，我们在提现前需要达到微信支付平台的要求，支付开通时间超过一个季度并且流水30天不间断(是否一季度参考支付平台 记不清了╮(╯▽╰)╭)</p>\n<h2 id=\"实现过程\"><a href=\"#实现过程\" class=\"headerlink\" title=\"实现过程\"></a>实现过程</h2><p>这里我们只简单记录一下参数以及简单说明注意点</p>\n<h3 id=\"代码实现-2\"><a href=\"#代码实现-2\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h3><p>这里大致步骤与上面一致 就直接贴参数了<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Map&lt;String, String&gt; packageParams = new HashMap&lt;&gt;();</span><br><span class=\"line\">   packageParams.put(&quot;amount&quot;,amount);</span><br><span class=\"line\">   packageParams.put(&quot;check_name&quot;,check_name);</span><br><span class=\"line\">   packageParams.put(&quot;desc&quot;,desc);</span><br><span class=\"line\">   packageParams.put(&quot;mch_appid&quot;, WechatConfig.appid);</span><br><span class=\"line\">   packageParams.put(&quot;mchid&quot;, WechatConfig.mch_id);</span><br><span class=\"line\">   packageParams.put(&quot;nonce_str&quot;, nonce_str);</span><br><span class=\"line\">   packageParams.put(&quot;openid&quot;, openId + &quot;&quot;);//用户的openID，自己获取</span><br><span class=\"line\">   packageParams.put(&quot;partner_trade_no&quot;, payOrderId + &quot;&quot;);//商户订单号,自己的订单ID</span><br><span class=\"line\">   packageParams.put(&quot;spbill_create_ip&quot;, spbill_create_ip);//商户订单号,自己的订单ID</span><br><span class=\"line\"></span><br><span class=\"line\">   String prestr = PayUtil.createLinkString(packageParams); // 把数组所有元素，按照“参数=参数值”的模式用“&amp;”字符拼接成字符串</span><br></pre></td></tr></table></figure></p>\n<p>然后xml→发送请求得到success即成功到账</p>\n<h3 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h3><ol>\n<li>这里需要双向证书请求</li>\n</ol>\n<h2 id=\"end\"><a href=\"#end\" class=\"headerlink\" title=\"end\"></a>end</h2><p>还有些功能没有总结 后期补充</p>","categories":[{"name":"支付","path":"api/categories/支付.json"}],"tags":[{"name":"微信支付","path":"api/tags/微信支付.json"}]}