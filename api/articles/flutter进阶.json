{"title":"flutter进阶","slug":"flutter进阶","date":"2019-05-31T08:14:21.423Z","updated":"2019-05-31T09:30:32.457Z","comments":true,"path":"api/articles/flutter进阶.json","excerpt":" [Figure] ","covers":["http%3A%2F%2Fimg2.mukewang.com%2F5b4c075b000198c216000586.jpg"],"content":"<p><img src=\"https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1557478079728&amp;di=ed3bc2a7ff412019877ad52a9ef8c5f3&amp;imgtype=0&amp;src=http%3A%2F%2Fimg2.mukewang.com%2F5b4c075b000198c216000586.jpg\" alt><a id=\"more\"></a><br>终于学完了Flutter的基础组件，并且实例了一把，感觉光玩组件就很有趣，期待接下来去学习与后台对接成为灵活的App,那么在实践过程中..又踩坑了，记录一下</p>\n<p>##关于报错<br>在学习的过程中出现了这样一个报错</p>\n<blockquote>\n<p>RangeError (index): Invalid value: Valid value range is empty: 0</p>\n</blockquote>\n<p>怎么可能是我出错呢(小声哔哔)，查阅百度这个错误触发的原因是因为构建失败，之后在终端运行</p>\n<blockquote>\n<p>flutter clean</p>\n</blockquote>\n<p>在重新跑项目 成功解决</p>\n<p>##关于打包<br>写完以后想要看看真机是啥效果，于是乎就需要打包，但是在打包之前需要修改几处代码才能够打包成功<br><br>1.需要有key.jks密钥</p>\n<blockquote>\n<p>AndroidStudio的bin目录位置\\keytool -genkey -v -keystore 存放密钥的位置\\key.jks -keyalg RSA -keysize 2048 -validity 10000 -alias key</p>\n</blockquote>\n<p>之后需要填key、pwd等一系列内容然后就能够生成</p>\n<p>2.需要在项目中将密钥添入供项目读取<br><br>先创建/android/key.properties 存放key的相关信息</p>\n<blockquote>\n<p>storePassword=&lt;创建keystore时的storePassword&gt;<br><br>keyPassword=&lt;创建keystore时的keyPassword&gt;<br><br>keyAlias=key<br><br>storeFile=&lt;密钥库文件的位置 , 例如: /Users/<user name>/key.jks&gt;</user></p>\n</blockquote>\n<p>然后/android/app/build.gradle 找到</p>\n<blockquote>\n<p>android { </p>\n</blockquote>\n<p>在这行之前添加如下代码</p>\n<blockquote>\n<p>def keystorePropertiesFile = rootProject.file(“key.properties”)<br><br>def keystoreProperties = new Properties()<br><br>keystoreProperties.load(new FileInputStream(keystorePropertiesFile))</p>\n</blockquote>\n<p>然后把buildType{}替换一段代码<br>    signingConfigs {<br>        release {<br>            keyAlias keystoreProperties[‘keyAlias’]<br>            keyPassword keystoreProperties[‘keyPassword’]<br>            storeFile file(keystoreProperties[‘storeFile’])<br>            storePassword keystoreProperties[‘storePassword’]<br>        }<br>    }<br>    buildTypes {<br>        release {<br>            signingConfig signingConfigs.release<br>        }<br>    }</p>\n<p>这样就配置完成了，然后运行 </p>\n<blockquote>\n<p>flutter build run</p>\n</blockquote>\n<p>就可以正常打包了</p>\n<p>##end<br>storeFile的路径要填写绝对路径，生成的密钥不要共享和泄露<br><br>打包完的apk文件在</p>\n<blockquote>\n<p>/build/app/outputs/apk/app-release.apk</p>\n</blockquote>\n","more":"<br>终于学完了Flutter的基础组件，并且实例了一把，感觉光玩组件就很有趣，期待接下来去学习与后台对接成为灵活的App,那么在实践过程中..又踩坑了，记录一下</p>\n<p>##关于报错<br>在学习的过程中出现了这样一个报错</p>\n<blockquote>\n<p>RangeError (index): Invalid value: Valid value range is empty: 0</p>\n</blockquote>\n<p>怎么可能是我出错呢(小声哔哔)，查阅百度这个错误触发的原因是因为构建失败，之后在终端运行</p>\n<blockquote>\n<p>flutter clean</p>\n</blockquote>\n<p>在重新跑项目 成功解决</p>\n<p>##关于打包<br>写完以后想要看看真机是啥效果，于是乎就需要打包，但是在打包之前需要修改几处代码才能够打包成功<br><br>1.需要有key.jks密钥</p>\n<blockquote>\n<p>AndroidStudio的bin目录位置\\keytool -genkey -v -keystore 存放密钥的位置\\key.jks -keyalg RSA -keysize 2048 -validity 10000 -alias key</p>\n</blockquote>\n<p>之后需要填key、pwd等一系列内容然后就能够生成</p>\n<p>2.需要在项目中将密钥添入供项目读取<br><br>先创建/android/key.properties 存放key的相关信息</p>\n<blockquote>\n<p>storePassword=&lt;创建keystore时的storePassword&gt;<br><br>keyPassword=&lt;创建keystore时的keyPassword&gt;<br><br>keyAlias=key<br><br>storeFile=&lt;密钥库文件的位置 , 例如: /Users/<user name>/key.jks&gt;</user></p>\n</blockquote>\n<p>然后/android/app/build.gradle 找到</p>\n<blockquote>\n<p>android { </p>\n</blockquote>\n<p>在这行之前添加如下代码</p>\n<blockquote>\n<p>def keystorePropertiesFile = rootProject.file(“key.properties”)<br><br>def keystoreProperties = new Properties()<br><br>keystoreProperties.load(new FileInputStream(keystorePropertiesFile))</p>\n</blockquote>\n<p>然后把buildType{}替换一段代码<br>    signingConfigs {<br>        release {<br>            keyAlias keystoreProperties[‘keyAlias’]<br>            keyPassword keystoreProperties[‘keyPassword’]<br>            storeFile file(keystoreProperties[‘storeFile’])<br>            storePassword keystoreProperties[‘storePassword’]<br>        }<br>    }<br>    buildTypes {<br>        release {<br>            signingConfig signingConfigs.release<br>        }<br>    }</p>\n<p>这样就配置完成了，然后运行 </p>\n<blockquote>\n<p>flutter build run</p>\n</blockquote>\n<p>就可以正常打包了</p>\n<p>##end<br>storeFile的路径要填写绝对路径，生成的密钥不要共享和泄露<br><br>打包完的apk文件在</p>\n<blockquote>\n<p>/build/app/outputs/apk/app-release.apk</p>\n</blockquote>","categories":[{"name":"flutter","path":"api/categories/flutter.json"}],"tags":[{"name":"flutter","path":"api/tags/flutter.json"},{"name":"small case","path":"api/tags/small case.json"}]}